<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Week 6 on CS61A-Notes</title>
    <link>https://cs61a.rouxl.es/docs/week-6/</link>
    <description>Recent content in Week 6 on CS61A-Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://cs61a.rouxl.es/docs/week-6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Trees</title>
      <link>https://cs61a.rouxl.es/docs/week-6/content/trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cs61a.rouxl.es/docs/week-6/content/trees/</guid>
      <description>Trees#A tree is an abstract data structure (basically not implemented by default in Python), which means we need to use data abstractions in order to implement this structure.
What does a tree look like?#A tree has a root and a list of branches, where each branch is a tree itself.
A tree with zero branches (the white circles in the drawing above) is called a leaf.</description>
    </item>
    
    <item>
      <title>Mutability</title>
      <link>https://cs61a.rouxl.es/docs/week-6/content/mutability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cs61a.rouxl.es/docs/week-6/content/mutability/</guid>
      <description>Mutability#</description>
    </item>
    
  </channel>
</rss>
